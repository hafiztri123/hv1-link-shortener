name: Go CI/CD Pipeline

on:
  push:
    branches: [ "main" ]
    paths:
      - 'services/**'
      - 'shared/**'
      - '.github/workflows/**'
  pull_request:
    branches: [ "main"]
    paths:
      - 'services/**'
      - 'shared/**'
      - '.github/workflows/**'


jobs:
  changes:
    runs-on: ubuntu-latest
    outputs: 
      app: ${{ steps.filter.outputs.app}}
      worker: ${{ steps.filter.outputs.worker}}
      shared: ${{ steps.filter.outputs.shared}}

    steps: 
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            app:
              - 'services/app/**'
              - 'shared/**'
            worker:
              - 'services/worker/**'
              - 'shared/**'
            shared:
              - 'shared/**'


  build-test-app:
    needs: changes
    if: ${{ needs.changes.outputs.app == 'true'}}
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./services/app
    steps:
      - name: checkout code
        uses: actions/checkout@v4
      
      - name: setup Go
        uses: actions/setup-go@v5
        with: 
          go-version: '1.23'
          cache-dependency-path: services/app/go.sum
        
      - name: check formatting
        run : |
          go fmt ./...
          git diff --exit-code
        
      - name: lint
        run: 
          go vet ./...
        
      - name: build
        run:
          go build -v ./...
      
      - name: test
        env:
          ID_OFFSET: ${{ secrets.ID_OFFSET }}
        run: go test -v ./...


  build-test-worker:
    needs: changes
    if: ${{ needs.changes.outputs.worker == 'true'}}
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./services/worker
    steps:
      - name: checkout code
        uses: actions/checkout@v4
      
      - name: setup Go
        uses: actions/setup-go@v5
        with: 
          go-version: '1.23'
          cache-dependency-path: services/worker/go.sum
        
      - name: check formatting
        run : |
          go fmt ./...
          git diff --exit-code
        
      - name: lint
        run: 
          go vet ./...
        
      - name: build
        run:
          go build -v ./...
      
      - name: test
        run: go test -v ./...

validate-shared:
    needs: changes
    if: ${{ needs.changes.outputs.shared == 'true'}}
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./shared
    steps:
      - name: checkout code
        uses: actions/checkout@v4
      
      - name: setup Go
        uses: actions/setup-go@v5
        with: 
          go-version: '1.23'
          cache-dependency-path: shared/go.sum
        
      - name: check formatting
        run : |
          go fmt ./...
          git diff --exit-code
        
      - name: lint
        run: 
          go vet ./...
        
      - name: build
        run:
          go build -v ./...
      
      - name: test
        run: go test -v ./...

    
  