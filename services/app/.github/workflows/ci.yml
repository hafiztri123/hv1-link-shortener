name: Go CI/CD Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main"]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23'
          cache: true

      # - name: Create .env file for Docker Compose
        # run: |
          # echo "POSTGRES_USER=${{ secrets.POSTGRES_USER }}" >> .env
          # echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> .env
          # echo "POSTGRES_DB=${{ secrets.POSTGRES_DB }}_test" >> .env

      # - name: Start database with Docker Compose
        # run : docker compose up -d

      - name: Check Formatting
        run : |
          go fmt ./...
          git diff --exit-code

      - name: Lint code
        run : go vet ./...

      - name: Build
        run : go build -v ./...

      # - name: Install migrate
        # run : go install -tags 'postgres' github.com/golang-migrate/migrate/v4/cmd/migrate@latest

      # - name: Setup test database
        # run : |
          # migrate -database "${{secrets.DATABASE_URL_TEST}}" -path migrations down -all
          # migrate -database "${{secrets.DATABASE_URL_TEST}}" -path migrations up


      - name: test
        env :
          # DATABASE_URL: ${{secrets.DATABASE_URL}}
          # DATABASE_URL_TEST: ${{secrets.DATABASE_URL_TEST}}

          # REDIS_URL: ${{secrets.REDIS_URL}}
          # REDIS_URL_TEST: ${{secrets.REDIS_URL_TEST}}

          ID_OFFSET: ${{secrets.ID_OFFSET}}

          # POSTGRES_USER: ${{secrets.POSTGRES_USER}}
          # POSTGRES_PASSWORD: ${{secrets.POSTGRES_PASSWORD}}
          # POSTGRES_DB: ${{secrets.POSTGRES_DB}}
        run : |

          go test -v ./internal/...


      # - name: Stop services
        # if: always()
        # run: docker compose down -v
